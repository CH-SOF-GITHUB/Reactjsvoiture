{"version":3,"sources":["components/Cars.js","components/Mycars.js","App.js","reportWebVitals.js","index.js"],"names":["Car","color","nom","year","colorInfo","style","backgroundColor","width","padding","margin","myCars","state","voitures","name","titre","addTenYears","updatedState","map","x","setState","Date","getFullYear","this","onClick","voiture","index","Component","App","className","Mycars","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAqBeA,EAlBH,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,KAEfC,EAAYH,EAAU,0CAAaA,EAAb,OAA6B,kDAEzD,OAAGC,EAGK,sBAAKG,MAAO,CAACC,gBAAiB,OAAQC,MAAO,QAASC,QAAS,OAAQC,OAAQ,YAA/E,UACI,yCAAYP,KACZ,sCAASC,KACRC,KAIF,MCoCAM,E,4MA/CXC,MAAQ,CACJC,SAAU,CACN,CAACC,KAAK,OAAQZ,MAAM,MAAOE,KAAM,KACjC,CAACU,KAAK,WAAYZ,MAAM,QAASE,KAAM,MACvC,CAACU,KAAK,UAAWZ,MAAM,QAASE,KAAM,OAE1CW,MAAO,2B,EAGXC,YAAc,WAGV,IAAMC,EAAe,EAAKL,MAAMC,SAASK,KAAI,SAACC,GAC1C,OAAOA,EAAEf,MAAQ,MAGrB,EAAKgB,SAAS,CACTH,kB,uDAML,IAAMb,GAAO,IAAIiB,MAAOC,cACxB,OACI,gCACI,6BAAKC,KAAKX,MAAMG,QAEf,wBAAQS,QAASD,KAAKP,YAAtB,uBAIGO,KAAKX,MAAMC,SAASK,KAAI,SAACO,EAASC,GAC9B,OACI,8BACK,cAAC,EAAD,CAAKvB,IAAKsB,EAAQX,KAAMZ,MAAOuB,EAAQvB,MAAOE,KAAMA,EAAOqB,EAAQrB,KAAO,UADrEsB,a,GArCjBC,aCaNC,G,6KARX,OACE,qBAAKC,UAAU,MAAf,SACE,cAACC,EAAD,U,GALUH,cCOHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87227a76.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// un composant Car de type function\r\nconst Car = ({color,nom, year}) => {\r\n\r\n    const colorInfo = color ? ( <p>Couleur: {color} </p>) : (<p>Couleur: Néant</p>);\r\n\r\n    if(nom){\r\n        return (\r\n\r\n            <div style={{backgroundColor: 'pink', width: '400px', padding: '10px', margin: '5px auto'}}> \r\n                <p>Marque: {nom}</p>\r\n                <p>Age: {year}</p>\r\n                {colorInfo}\r\n            </div>\r\n        )\r\n    }else {\r\n        return null; \r\n    }  \r\n}\r\n\r\nexport default Car;","import React, { Component } from 'react';\r\nimport Car from './Cars'\r\n\r\nclass myCars extends Component{\r\n\r\n    // voitures est un Tableau \r\n    state = {\r\n        voitures: [\r\n            {name:'Ford', color:'red', year: 2000},\r\n            {name:'Mercedes', color:'black', year: 2010},\r\n            {name:'Peugeot', color:'green', year: 2018}\r\n        ],\r\n        titre: 'Mon Catalogue voiture 2'\r\n    }\r\n\r\n    addTenYears = () => {\r\n        // console.log('activé');\r\n        // this.state.voitures[0].year += 1;Do not mutate state directly. Use setState()\r\n        const updatedState = this.state.voitures.map((x) => {\r\n            return x.year -= 10;\r\n        })\r\n\r\n        this.setState({\r\n             updatedState\r\n        })\r\n    } \r\n\r\n    render(){\r\n\r\n        const year = new Date().getFullYear();\r\n        return(\r\n            <div>               \r\n                <h1>{this.state.titre}</h1>\r\n                 \r\n                 <button onClick={this.addTenYears}> + 10 ans</button>\r\n               \r\n\r\n                {\r\n                    this.state.voitures.map((voiture, index) => {\r\n                        return(\r\n                            <div key={index}>\r\n                                 <Car nom={voiture.name} color={voiture.color} year={year - voiture.year + ' ans'} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>         \r\n        )\r\n           \r\n    }\r\n}\r\n\r\nexport default myCars;","import React, {Component} from 'react';\nimport Mycars from './components/Mycars';\nimport './App.css';\n\n\nclass App extends Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Mycars />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}